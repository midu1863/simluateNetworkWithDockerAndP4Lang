{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 48, false],
        ["tmp_0", 32, false],
        ["hasTimeBan_0", 1, false],
        ["timeBan_0", 48, false],
        ["ownId_0", 32, false],
        ["balence_0", 32, false],
        ["balence_1", 32, false],
        ["dequeue_0", 19, false],
        ["leftOver_0", 32, false],
        ["newBalence_0", 32, false],
        ["oldLeftOver_0", 32, false],
        ["timeout_0", 32, false],
        ["second_0", 19, false],
        ["tmp_1", 32, false],
        ["tmp_2", 32, false],
        ["tmp_3", 32, false],
        ["balence_2", 32, false],
        ["balence_3", 32, false],
        ["metadata.ingress_port", 9, false],
        ["metadata.egress_spec", 9, false],
        ["metadata.egress_port", 9, false],
        ["metadata.instance_type", 32, false],
        ["metadata.packet_length", 32, false],
        ["metadata.enq_timestamp", 32, false],
        ["metadata.enq_qdepth", 19, false],
        ["metadata.deq_timedelta", 32, false],
        ["metadata.deq_qdepth", 19, false],
        ["metadata.ingress_global_timestamp", 48, false],
        ["metadata.egress_global_timestamp", 48, false],
        ["metadata.mcast_grp", 16, false],
        ["metadata.egress_rid", 16, false],
        ["metadata.checksum_error", 1, false],
        ["metadata.parser_error", 32, false],
        ["metadata.priority", 3, false],
        ["_padding_0", 4, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "arp_t",
      "id" : 3,
      "fields" : [
        ["hwType", 16, false],
        ["protocalType", 16, false],
        ["hwAddrLenght", 8, false],
        ["protocolAddrLenght", 8, false],
        ["opCode", 16, false],
        ["srcMacAddr", 48, false],
        ["srcIpAddr", 32, false],
        ["dstMacAddr", 48, false],
        ["dstIpAddr", 32, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 4,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["diffserv", 8, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "cup_t",
      "id" : 5,
      "fields" : [
        ["srcSwitchId", 32, false],
        ["dstSwitchId", 32, false],
        ["opCode", 32, false],
        ["creditValue", 32, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "arp",
      "id" : 3,
      "header_type" : "arp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 4,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "cup",
      "id" : 5,
      "header_type" : "cup_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0806",
              "mask" : null,
              "next_state" : "parse_arp"
            },
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "hexstr",
              "value" : "0x0100",
              "mask" : null,
              "next_state" : "parse_cup"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "drop"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "drop",
          "id" : 1,
          "parser_ops" : [],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_arp",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "arp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_ipv4",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_cup",
          "id" : 4,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "cup"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 488,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["ethernet", "arp", "ipv4", "cup"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "MyIngress.debug",
      "id" : 0,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 171,
        "column" : 26,
        "source_fragment" : "debug"
      },
      "size" : 10,
      "bitwidth" : 32
    },
    {
      "name" : "MyIngress.lastUpdatedTime",
      "id" : 1,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 172,
        "column" : 32,
        "source_fragment" : "lastUpdatedTime"
      },
      "size" : 3,
      "bitwidth" : 48
    },
    {
      "name" : "MyIngress.hasTimeBanList",
      "id" : 2,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 173,
        "column" : 31,
        "source_fragment" : "hasTimeBanList"
      },
      "size" : 3,
      "bitwidth" : 1
    },
    {
      "name" : "MyIngress.timeBanList",
      "id" : 3,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 174,
        "column" : 32,
        "source_fragment" : "timeBanList"
      },
      "size" : 3,
      "bitwidth" : 48
    },
    {
      "name" : "MyIngress.queue",
      "id" : 4,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 243,
        "column" : 25,
        "source_fragment" : "queue"
      },
      "size" : 2,
      "bitwidth" : 19
    },
    {
      "name" : "switchId",
      "id" : 5,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 97,
        "column" : 24,
        "source_fragment" : "switchId"
      },
      "size" : 1,
      "bitwidth" : 32
    },
    {
      "name" : "portSwitchMapping",
      "id" : 6,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 98,
        "column" : 31,
        "source_fragment" : "portSwitchMapping"
      },
      "size" : 3,
      "bitwidth" : 32
    },
    {
      "name" : "ingressCreditCard",
      "id" : 7,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 99,
        "column" : 28,
        "source_fragment" : "ingressCreditCard"
      },
      "size" : 3,
      "bitwidth" : 32
    },
    {
      "name" : "leftOverCreditCard",
      "id" : 8,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 100,
        "column" : 28,
        "source_fragment" : "leftOverCreditCard"
      },
      "size" : 3,
      "bitwidth" : 32
    },
    {
      "name" : "egressDequeueDepth",
      "id" : 9,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 101,
        "column" : 28,
        "source_fragment" : "egressDequeueDepth"
      },
      "size" : 3,
      "bitwidth" : 19
    },
    {
      "name" : "egressEnqueueDepth",
      "id" : 10,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 102,
        "column" : 28,
        "source_fragment" : "egressEnqueueDepth"
      },
      "size" : 3,
      "bitwidth" : 19
    },
    {
      "name" : "egressTimeInterval",
      "id" : 11,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 103,
        "column" : 28,
        "source_fragment" : "egressTimeInterval"
      },
      "size" : 3,
      "bitwidth" : 48
    },
    {
      "name" : "maxQueueLength",
      "id" : 12,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 106,
        "column" : 21,
        "source_fragment" : "maxQueueLength"
      },
      "size" : 1,
      "bitwidth" : 19
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 446,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "diffserv"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "identification"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "field",
          "value" : ["cup", "srcSwitchId"]
        },
        {
          "type" : "field",
          "value" : ["cup", "dstSwitchId"]
        },
        {
          "type" : "field",
          "value" : ["cup", "opCode"]
        },
        {
          "type" : "field",
          "value" : ["cup", "creditValue"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 466,
        "column" : 7,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "diffserv"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "identification"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "MyIngress.drop",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 177,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 177,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.sendToGroupId",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "mcast_grp"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 219,
            "column" : 8,
            "source_fragment" : "standard_metadata.mcast_grp = 1"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.sendToGroupId",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "mcast_grp"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 219,
            "column" : 8,
            "source_fragment" : "standard_metadata.mcast_grp = 1"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.sendToGroupId",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "mcast_grp"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 219,
            "column" : 8,
            "source_fragment" : "standard_metadata.mcast_grp = 1"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.sendToGroupId",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "mcast_grp"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 219,
            "column" : 8,
            "source_fragment" : "standard_metadata.mcast_grp = 1"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.sendCredits",
      "id" : 6,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ihl"]
            },
            {
              "type" : "hexstr",
              "value" : "0x09"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 223,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ihl = 9"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "totalLen"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0010"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 224,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.totalLen = hdr.ipv4.totalLen + 16"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "cup"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 225,
            "column" : 8,
            "source_fragment" : "hdr.cup.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cup", "srcSwitchId"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000002"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 226,
            "column" : 8,
            "source_fragment" : "hdr.cup.srcSwitchId = (bit<32>) 0x00000002"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cup", "dstSwitchId"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 227,
            "column" : 8,
            "source_fragment" : "hdr.cup.dstSwitchId = (bit<32>) 0x00000001"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cup", "creditValue"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000000a"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 229,
            "column" : 8,
            "source_fragment" : "hdr.cup.creditValue = creditBalance"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0100"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 7,
            "column" : 25,
            "source_fragment" : "0x0100; ..."
          }
        }
      ]
    },
    {
      "name" : "MyIngress.sendCredits",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ihl"]
            },
            {
              "type" : "hexstr",
              "value" : "0x09"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 223,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ihl = 9"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "totalLen"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0010"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 224,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.totalLen = hdr.ipv4.totalLen + 16"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "cup"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 225,
            "column" : 8,
            "source_fragment" : "hdr.cup.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cup", "srcSwitchId"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000002"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 226,
            "column" : 8,
            "source_fragment" : "hdr.cup.srcSwitchId = (bit<32>) 0x00000002"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cup", "dstSwitchId"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 227,
            "column" : 8,
            "source_fragment" : "hdr.cup.dstSwitchId = (bit<32>) 0x00000001"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cup", "creditValue"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "newBalence_0"]
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 229,
            "column" : 8,
            "source_fragment" : "hdr.cup.creditValue = creditBalance"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0100"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 7,
            "column" : 25,
            "source_fragment" : "0x0100; ..."
          }
        }
      ]
    },
    {
      "name" : "MyIngress.sendCredits",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ihl"]
            },
            {
              "type" : "hexstr",
              "value" : "0x09"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 223,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ihl = 9"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "totalLen"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0010"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 224,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.totalLen = hdr.ipv4.totalLen + 16"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "cup"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 225,
            "column" : 8,
            "source_fragment" : "hdr.cup.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cup", "srcSwitchId"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000002"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 226,
            "column" : 8,
            "source_fragment" : "hdr.cup.srcSwitchId = (bit<32>) 0x00000002"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cup", "dstSwitchId"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 227,
            "column" : 8,
            "source_fragment" : "hdr.cup.dstSwitchId = (bit<32>) 0x00000001"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cup", "creditValue"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "timeout_0"]
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 229,
            "column" : 8,
            "source_fragment" : "hdr.cup.creditValue = creditBalance"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0100"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 7,
            "column" : 25,
            "source_fragment" : "0x0100; ..."
          }
        }
      ]
    },
    {
      "name" : "MyIngress.setTimeBan",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.hasTimeBanList"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 240,
            "column" : 8,
            "source_fragment" : "hasTimeBanList.write(1, 1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x0000000f4240"
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["cup", "creditValue"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 241,
            "column" : 29,
            "source_fragment" : "newTime"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.timeBanList"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 241,
            "column" : 8,
            "source_fragment" : "timeBanList.write(1, newTime)"
          }
        }
      ]
    },
    {
      "name" : "creditBasedPackedCycle254",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "hasTimeBan_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 254,
            "column" : 12,
            "source_fragment" : "hasTimeBan = 1"
          }
        }
      ]
    },
    {
      "name" : "creditBasedPackedCycle256",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "hasTimeBan_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 256,
            "column" : 12,
            "source_fragment" : "hasTimeBan = 0"
          }
        }
      ]
    },
    {
      "name" : "creditBasedPackedCycle250",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "timeBan_0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.timeBanList"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 250,
            "column" : 8,
            "source_fragment" : "timeBanList.read(timeBan, 1)"
          }
        }
      ]
    },
    {
      "name" : "creditBasedPackedCycle269",
      "id" : 13,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "balence_0"]
            },
            {
              "type" : "register_array",
              "value" : "ingressCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 269,
            "column" : 8,
            "source_fragment" : "ingressCreditCard.read(balence, 1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "balence_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "balence_0"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["cup", "creditValue"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 270,
            "column" : 8,
            "source_fragment" : "balence = balence + hdr.cup.creditValue"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "ingressCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "field",
              "value" : ["scalars", "balence_0"]
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 271,
            "column" : 8,
            "source_fragment" : "ingressCreditCard.write(1, balence)"
          }
        }
      ]
    },
    {
      "name" : "creditBasedPackedCycle264",
      "id" : 14,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "ownId_0"]
            },
            {
              "type" : "register_array",
              "value" : "switchId"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 264,
            "column" : 6,
            "source_fragment" : "switchId.read(ownId, 0)"
          }
        }
      ]
    },
    {
      "name" : "creditBasedPackedCycle301",
      "id" : 15,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0002"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 301,
            "column" : 9,
            "source_fragment" : "standard_metadata.egress_spec = 2"
          }
        }
      ]
    },
    {
      "name" : "creditBasedPackedCycle294",
      "id" : 16,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cup", "opCode"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 294,
            "column" : 8,
            "source_fragment" : "hdr.cup.opCode = 0x1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "leftOverCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "hexstr",
              "value" : "0x0000000a"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 295,
            "column" : 8,
            "source_fragment" : "leftOverCreditCard.write(1, 10)"
          }
        }
      ]
    },
    {
      "name" : "creditBasedPackedCycle309",
      "id" : 17,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "oldLeftOver_0"]
            },
            {
              "type" : "register_array",
              "value" : "leftOverCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 309,
            "column" : 9,
            "source_fragment" : "leftOverCreditCard.read(oldLeftOver, 1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "oldLeftOver_0"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "hexstr",
                                        "value" : "0x0000000a"
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["scalars", "dequeue_0"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffff"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["scalars", "leftOver_0"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 310,
            "column" : 37,
            "source_fragment" : "oldLeftOver + newBalence"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "leftOverCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 310,
            "column" : 9,
            "source_fragment" : "leftOverCreditCard.write(1, oldLeftOver + newBalence)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cup", "opCode"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 311,
            "column" : 9,
            "source_fragment" : "hdr.cup.opCode = 0x1"
          }
        }
      ]
    },
    {
      "name" : "creditBasedPackedCycle314",
      "id" : 18,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "timeout_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000002"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 314,
            "column" : 24,
            "source_fragment" : "bit<32> timeout = 2;"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "second_0"]
            },
            {
              "type" : "register_array",
              "value" : "egressEnqueueDepth"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 316,
            "column" : 24,
            "source_fragment" : "egressEnqueueDepth.read(second, 1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "timeout_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "hexstr",
                        "value" : "0x00000002"
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "second_0"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 317,
            "column" : 24,
            "source_fragment" : "timeout = timeout + ((bit<32>) second)"
          }
        }
      ]
    },
    {
      "name" : "creditBasedPackedCycle319",
      "id" : 19,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cup", "opCode"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000002"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 319,
            "column" : 24,
            "source_fragment" : "hdr.cup.opCode = 0x2"
          }
        }
      ]
    },
    {
      "name" : "creditBasedPackedCycle326",
      "id" : 20,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0002"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 326,
            "column" : 10,
            "source_fragment" : "standard_metadata.egress_spec = 2"
          }
        }
      ]
    },
    {
      "name" : "creditBasedPackedCycle305",
      "id" : 21,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "newBalence_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x0000000a"
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["scalars", "dequeue_0"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "leftOver_0"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 305,
            "column" : 8,
            "source_fragment" : "creditValue_t newBalence = ( (10 - ((bit<32>) dequeue)) - leftOver);"
          }
        }
      ]
    },
    {
      "name" : "creditBasedPackedCycle283",
      "id" : 22,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "balence_1"]
            },
            {
              "type" : "register_array",
              "value" : "ingressCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 283,
            "column" : 6,
            "source_fragment" : "ingressCreditCard.read(balence, 1)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "dequeue_0"]
            },
            {
              "type" : "register_array",
              "value" : "egressDequeueDepth"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 287,
            "column" : 7,
            "source_fragment" : "egressDequeueDepth.read(dequeue, 1)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "leftOver_0"]
            },
            {
              "type" : "register_array",
              "value" : "leftOverCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 290,
            "column" : 7,
            "source_fragment" : "leftOverCreditCard.read(leftOver, 1)"
          }
        }
      ]
    },
    {
      "name" : "MyEgress.drop",
      "id" : 23,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 384,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyEgress.removeCUPheader",
      "id" : 24,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0800"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 5,
            "column" : 26,
            "source_fragment" : "0x0800; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ihl"]
            },
            {
              "type" : "hexstr",
              "value" : "0x05"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 389,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ihl=5"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "totalLen"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xfff0"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 390,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.totalLen = hdr.ipv4.totalLen - 16"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "cup"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 391,
            "column" : 8,
            "source_fragment" : "hdr.cup.setInvalid()"
          }
        }
      ]
    },
    {
      "name" : "MyEgress.updateQueueDepth",
      "id" : 25,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 396,
            "column" : 33,
            "source_fragment" : "(bit<32>) port"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "egressDequeueDepth"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "deq_qdepth"]
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 396,
            "column" : 8,
            "source_fragment" : "egressDequeueDepth.write((bit<32>) port, standard_metadata.deq_qdepth)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 397,
            "column" : 33,
            "source_fragment" : "(bit<32>) port"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "egressEnqueueDepth"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "enq_qdepth"]
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 397,
            "column" : 8,
            "source_fragment" : "egressEnqueueDepth.write((bit<32>) port, standard_metadata.enq_qdepth)"
          }
        }
      ]
    },
    {
      "name" : "MyEgress.updateEgressTimeInterval",
      "id" : 26,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 402,
            "column" : 33,
            "source_fragment" : "(bit<32>) port"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "egressTimeInterval"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_global_timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 402,
            "column" : 8,
            "source_fragment" : "egressTimeInterval.write((bit<32>) port, standard_metadata.egress_global_timestamp)"
          }
        }
      ]
    },
    {
      "name" : "MyEgress.reduceLeftOver",
      "id" : 27,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "balence_2"]
            },
            {
              "type" : "register_array",
              "value" : "leftOverCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 407,
            "column" : 8,
            "source_fragment" : "leftOverCreditCard.read(balence, 1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "balence_2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "balence_2"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 408,
            "column" : 8,
            "source_fragment" : "balence = balence - 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "leftOverCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "field",
              "value" : ["scalars", "balence_2"]
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 410,
            "column" : 8,
            "source_fragment" : "leftOverCreditCard.write(1, balence)"
          }
        }
      ]
    },
    {
      "name" : "MyEgress.reduceCreditBalance",
      "id" : 28,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "balence_3"]
            },
            {
              "type" : "register_array",
              "value" : "ingressCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 415,
            "column" : 8,
            "source_fragment" : "ingressCreditCard.read(balence, 1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "balence_3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "balence_3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 417,
            "column" : 8,
            "source_fragment" : "balence = balence - 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "ingressCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "field",
              "value" : ["scalars", "balence_3"]
            }
          ],
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 418,
            "column" : 8,
            "source_fragment" : "ingressCreditCard.write(1, balence)"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 168,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "tbl_creditBasedPackedCycle250",
      "tables" : [
        {
          "name" : "tbl_creditBasedPackedCycle250",
          "id" : 0,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 250,
            "column" : 8,
            "source_fragment" : "timeBanList.read(timeBan, 1)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12],
          "actions" : ["creditBasedPackedCycle250"],
          "base_default_next" : "node_3",
          "next_tables" : {
            "creditBasedPackedCycle250" : "node_3"
          },
          "default_entry" : {
            "action_id" : 12,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_creditBasedPackedCycle254",
          "id" : 1,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 254,
            "column" : 23,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10],
          "actions" : ["creditBasedPackedCycle254"],
          "base_default_next" : "node_6",
          "next_tables" : {
            "creditBasedPackedCycle254" : "node_6"
          },
          "default_entry" : {
            "action_id" : 10,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_creditBasedPackedCycle256",
          "id" : 2,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 256,
            "column" : 23,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11],
          "actions" : ["creditBasedPackedCycle256"],
          "base_default_next" : "node_6",
          "next_tables" : {
            "creditBasedPackedCycle256" : "node_6"
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_drop",
          "id" : 3,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 260,
            "column" : 6,
            "source_fragment" : "drop()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [0],
          "actions" : ["MyIngress.drop"],
          "base_default_next" : "node_8",
          "next_tables" : {
            "MyIngress.drop" : "node_8"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_creditBasedPackedCycle264",
          "id" : 4,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 264,
            "column" : 6,
            "source_fragment" : "switchId.read(ownId, 0)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [14],
          "actions" : ["creditBasedPackedCycle264"],
          "base_default_next" : "node_10",
          "next_tables" : {
            "creditBasedPackedCycle264" : "node_10"
          },
          "default_entry" : {
            "action_id" : 14,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_creditBasedPackedCycle269",
          "id" : 5,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 269,
            "column" : 8,
            "source_fragment" : "ingressCreditCard.read(balence, 1); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [13],
          "actions" : ["creditBasedPackedCycle269"],
          "base_default_next" : null,
          "next_tables" : {
            "creditBasedPackedCycle269" : null
          },
          "default_entry" : {
            "action_id" : 13,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_setTimeBan",
          "id" : 6,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 273,
            "column" : 20,
            "source_fragment" : "setTimeBan(hdr.cup.creditValue)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9],
          "actions" : ["MyIngress.setTimeBan"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.setTimeBan" : null
          },
          "default_entry" : {
            "action_id" : 9,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_drop_0",
          "id" : 7,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 275,
            "column" : 20,
            "source_fragment" : "drop()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [1],
          "actions" : ["MyIngress.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.drop" : null
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_creditBasedPackedCycle283",
          "id" : 8,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 283,
            "column" : 6,
            "source_fragment" : "ingressCreditCard.read(balence, 1); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [22],
          "actions" : ["creditBasedPackedCycle283"],
          "base_default_next" : "node_18",
          "next_tables" : {
            "creditBasedPackedCycle283" : "node_18"
          },
          "default_entry" : {
            "action_id" : 22,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_sendCredits",
          "id" : 9,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 293,
            "column" : 8,
            "source_fragment" : "sendCredits((bit<32>) (10))"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [6],
          "actions" : ["MyIngress.sendCredits"],
          "base_default_next" : "tbl_creditBasedPackedCycle294",
          "next_tables" : {
            "MyIngress.sendCredits" : "tbl_creditBasedPackedCycle294"
          },
          "default_entry" : {
            "action_id" : 6,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_creditBasedPackedCycle294",
          "id" : 10,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 294,
            "column" : 23,
            "source_fragment" : "= 0x1; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [16],
          "actions" : ["creditBasedPackedCycle294"],
          "base_default_next" : "node_21",
          "next_tables" : {
            "creditBasedPackedCycle294" : "node_21"
          },
          "default_entry" : {
            "action_id" : 16,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_sendToGroupId",
          "id" : 11,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 299,
            "column" : 9,
            "source_fragment" : "sendToGroupId()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [2],
          "actions" : ["MyIngress.sendToGroupId"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.sendToGroupId" : null
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_creditBasedPackedCycle301",
          "id" : 12,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 301,
            "column" : 39,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [15],
          "actions" : ["creditBasedPackedCycle301"],
          "base_default_next" : null,
          "next_tables" : {
            "creditBasedPackedCycle301" : null
          },
          "default_entry" : {
            "action_id" : 15,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_creditBasedPackedCycle305",
          "id" : 13,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 305,
            "column" : 8,
            "source_fragment" : "creditValue_t newBalence = ( (10 - ((bit<32>) dequeue)) - leftOver);"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [21],
          "actions" : ["creditBasedPackedCycle305"],
          "base_default_next" : "node_25",
          "next_tables" : {
            "creditBasedPackedCycle305" : "node_25"
          },
          "default_entry" : {
            "action_id" : 21,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_sendCredits_0",
          "id" : 14,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 307,
            "column" : 9,
            "source_fragment" : "sendCredits(newBalence)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7],
          "actions" : ["MyIngress.sendCredits"],
          "base_default_next" : "tbl_creditBasedPackedCycle309",
          "next_tables" : {
            "MyIngress.sendCredits" : "tbl_creditBasedPackedCycle309"
          },
          "default_entry" : {
            "action_id" : 7,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_creditBasedPackedCycle309",
          "id" : 15,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 309,
            "column" : 9,
            "source_fragment" : "leftOverCreditCard.read(oldLeftOver, 1); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [17],
          "actions" : ["creditBasedPackedCycle309"],
          "base_default_next" : "tbl_sendToGroupId_0",
          "next_tables" : {
            "creditBasedPackedCycle309" : "tbl_sendToGroupId_0"
          },
          "default_entry" : {
            "action_id" : 17,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_sendToGroupId_0",
          "id" : 16,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 312,
            "column" : 9,
            "source_fragment" : "sendToGroupId()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [3],
          "actions" : ["MyIngress.sendToGroupId"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.sendToGroupId" : null
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_creditBasedPackedCycle314",
          "id" : 17,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 314,
            "column" : 24,
            "source_fragment" : "bit<32> timeout = 2; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [18],
          "actions" : ["creditBasedPackedCycle314"],
          "base_default_next" : "tbl_sendCredits_1",
          "next_tables" : {
            "creditBasedPackedCycle314" : "tbl_sendCredits_1"
          },
          "default_entry" : {
            "action_id" : 18,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_sendCredits_1",
          "id" : 18,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 318,
            "column" : 24,
            "source_fragment" : "sendCredits(timeout)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8],
          "actions" : ["MyIngress.sendCredits"],
          "base_default_next" : "tbl_creditBasedPackedCycle319",
          "next_tables" : {
            "MyIngress.sendCredits" : "tbl_creditBasedPackedCycle319"
          },
          "default_entry" : {
            "action_id" : 8,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_creditBasedPackedCycle319",
          "id" : 19,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 319,
            "column" : 39,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [19],
          "actions" : ["creditBasedPackedCycle319"],
          "base_default_next" : "tbl_sendToGroupId_1",
          "next_tables" : {
            "creditBasedPackedCycle319" : "tbl_sendToGroupId_1"
          },
          "default_entry" : {
            "action_id" : 19,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_sendToGroupId_1",
          "id" : 20,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 320,
            "column" : 24,
            "source_fragment" : "sendToGroupId()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [4],
          "actions" : ["MyIngress.sendToGroupId"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.sendToGroupId" : null
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_sendToGroupId_2",
          "id" : 21,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 324,
            "column" : 10,
            "source_fragment" : "sendToGroupId()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5],
          "actions" : ["MyIngress.sendToGroupId"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.sendToGroupId" : null
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_creditBasedPackedCycle326",
          "id" : 22,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 326,
            "column" : 40,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [20],
          "actions" : ["creditBasedPackedCycle326"],
          "base_default_next" : null,
          "next_tables" : {
            "creditBasedPackedCycle326" : null
          },
          "default_entry" : {
            "action_id" : 20,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_3",
          "id" : 0,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 253,
            "column" : 11,
            "source_fragment" : "standard_metadata.ingress_global_timestamp <= timeBan"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "<=",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "ingress_global_timestamp"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "timeBan_0"]
              }
            }
          },
          "true_next" : "tbl_creditBasedPackedCycle254",
          "false_next" : "tbl_creditBasedPackedCycle256"
        },
        {
          "name" : "node_6",
          "id" : 1,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 259,
            "column" : 12,
            "source_fragment" : "!hdr.ipv4.isValid() && !hdr.cup.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "not",
                  "left" : null,
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "not",
                  "left" : null,
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["cup", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          },
          "true_next" : "tbl_drop",
          "false_next" : "node_8"
        },
        {
          "name" : "node_8",
          "id" : 2,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 262,
            "column" : 9,
            "source_fragment" : "hdr.cup.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["cup", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_creditBasedPackedCycle264",
          "false_next" : "node_16"
        },
        {
          "name" : "node_10",
          "id" : 3,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 266,
            "column" : 10,
            "source_fragment" : "hdr.cup.dstSwitchId == ownId"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["cup", "dstSwitchId"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "ownId_0"]
              }
            }
          },
          "true_next" : "node_11",
          "false_next" : "tbl_drop_0"
        },
        {
          "name" : "node_11",
          "id" : 4,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 267,
            "column" : 11,
            "source_fragment" : "hdr.cup.opCode == 0x1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["cup", "opCode"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000001"
              }
            }
          },
          "true_next" : "tbl_creditBasedPackedCycle269",
          "false_next" : "node_13"
        },
        {
          "name" : "node_13",
          "id" : 5,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 272,
            "column" : 18,
            "source_fragment" : "hdr.cup.opCode == 0x2 && hasTimeBan == 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["cup", "opCode"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00000002"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "hasTimeBan_0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_setTimeBan"
        },
        {
          "name" : "node_16",
          "id" : 6,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 278,
            "column" : 15,
            "source_fragment" : "standard_metadata.egress_port == 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "egress_port"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0000"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_creditBasedPackedCycle283"
        },
        {
          "name" : "node_18",
          "id" : 7,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 292,
            "column" : 11,
            "source_fragment" : "dequeue < n1 && leftOver == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "<",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "dequeue_0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x000002"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "leftOver_0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00000001"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_sendCredits",
          "false_next" : "tbl_creditBasedPackedCycle305"
        },
        {
          "name" : "node_21",
          "id" : 8,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 298,
            "column" : 11,
            "source_fragment" : "hasTimeBan != 1 && balence > 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "!=",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "hasTimeBan_0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : ">",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "balence_1"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_sendToGroupId",
          "false_next" : "tbl_creditBasedPackedCycle301"
        },
        {
          "name" : "node_25",
          "id" : 9,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 306,
            "column" : 12,
            "source_fragment" : "newBalence <= 10 && newBalence >= 6"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "<=",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "hexstr",
                                    "value" : "0x0000000a"
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["scalars", "dequeue_0"]
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffff"
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "leftOver_0"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x0000000a"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : ">=",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "hexstr",
                                    "value" : "0x0000000a"
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["scalars", "dequeue_0"]
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffff"
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "leftOver_0"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00000006"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_sendCredits_0",
          "false_next" : "node_29"
        },
        {
          "name" : "node_29",
          "id" : 10,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 313,
            "column" : 31,
            "source_fragment" : "dequeue == 9"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "dequeue_0"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x000009"
              }
            }
          },
          "true_next" : "tbl_creditBasedPackedCycle314",
          "false_next" : "node_34"
        },
        {
          "name" : "node_34",
          "id" : 11,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 323,
            "column" : 12,
            "source_fragment" : "hasTimeBan != 1 && balence > 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "!=",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "hasTimeBan_0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : ">",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "balence_1"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_sendToGroupId_2",
          "false_next" : "tbl_creditBasedPackedCycle326"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 379,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : "node_39",
      "tables" : [
        {
          "name" : "tbl_removeCUPheader",
          "id" : 23,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 425,
            "column" : 16,
            "source_fragment" : "removeCUPheader()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [24],
          "actions" : ["MyEgress.removeCUPheader"],
          "base_default_next" : "tbl_reduceLeftOver",
          "next_tables" : {
            "MyEgress.removeCUPheader" : "tbl_reduceLeftOver"
          },
          "default_entry" : {
            "action_id" : 24,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_reduceLeftOver",
          "id" : 24,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 427,
            "column" : 12,
            "source_fragment" : "reduceLeftOver()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [27],
          "actions" : ["MyEgress.reduceLeftOver"],
          "base_default_next" : "tbl_updateQueueDepth",
          "next_tables" : {
            "MyEgress.reduceLeftOver" : "tbl_updateQueueDepth"
          },
          "default_entry" : {
            "action_id" : 27,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_updateQueueDepth",
          "id" : 25,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 428,
            "column" : 12,
            "source_fragment" : "updateQueueDepth()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [25],
          "actions" : ["MyEgress.updateQueueDepth"],
          "base_default_next" : "tbl_updateEgressTimeInterval",
          "next_tables" : {
            "MyEgress.updateQueueDepth" : "tbl_updateEgressTimeInterval"
          },
          "default_entry" : {
            "action_id" : 25,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_updateEgressTimeInterval",
          "id" : 26,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 429,
            "column" : 12,
            "source_fragment" : "updateEgressTimeInterval()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [26],
          "actions" : ["MyEgress.updateEgressTimeInterval"],
          "base_default_next" : "tbl_reduceCreditBalance",
          "next_tables" : {
            "MyEgress.updateEgressTimeInterval" : "tbl_reduceCreditBalance"
          },
          "default_entry" : {
            "action_id" : 26,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_reduceCreditBalance",
          "id" : 27,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 430,
            "column" : 12,
            "source_fragment" : "reduceCreditBalance()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [28],
          "actions" : ["MyEgress.reduceCreditBalance"],
          "base_default_next" : "node_46",
          "next_tables" : {
            "MyEgress.reduceCreditBalance" : "node_46"
          },
          "default_entry" : {
            "action_id" : 28,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_drop_1",
          "id" : 28,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 434,
            "column" : 12,
            "source_fragment" : "drop()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [23],
          "actions" : ["MyEgress.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "MyEgress.drop" : null
          },
          "default_entry" : {
            "action_id" : 23,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_39",
          "id" : 12,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 422,
            "column" : 12,
            "source_fragment" : "standard_metadata.egress_port == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "egress_port"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0001"
              }
            }
          },
          "true_next" : "node_40",
          "false_next" : "node_46"
        },
        {
          "name" : "node_40",
          "id" : 13,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 424,
            "column" : 15,
            "source_fragment" : "hdr.cup.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["cup", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_removeCUPheader",
          "false_next" : "tbl_reduceLeftOver"
        },
        {
          "name" : "node_46",
          "id" : 14,
          "source_info" : {
            "filename" : "creditBasedPackedCycle.p4",
            "line" : 433,
            "column" : 12,
            "source_fragment" : "standard_metadata.egress_port == 2 && !hdr.cup.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x0002"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "not",
                  "left" : null,
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["cup", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_drop_1"
        }
      ]
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 446,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "and",
          "left" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "right" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["cup", "$valid$"]
              }
            }
          }
        }
      }
    },
    {
      "name" : "cksum_0",
      "id" : 1,
      "source_info" : {
        "filename" : "creditBasedPackedCycle.p4",
        "line" : 466,
        "column" : 7,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc_0",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "and",
          "left" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "right" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["cup", "$valid$"]
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "reditBasedPackedCycle.bmv2/creditBasedPackedCycle.p4i",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}