{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 48, false],
        ["balence_0", 32, false],
        ["balence_1", 32, false],
        ["balence_2", 32, false],
        ["id_0", 32, false],
        ["metadata.ingress_port", 9, false],
        ["metadata.egress_spec", 9, false],
        ["metadata.egress_port", 9, false],
        ["metadata.instance_type", 32, false],
        ["metadata.packet_length", 32, false],
        ["metadata.enq_timestamp", 32, false],
        ["metadata.enq_qdepth", 19, false],
        ["metadata.deq_timedelta", 32, false],
        ["metadata.deq_qdepth", 19, false],
        ["metadata.ingress_global_timestamp", 48, false],
        ["metadata.egress_global_timestamp", 48, false],
        ["metadata.mcast_grp", 16, false],
        ["metadata.egress_rid", 16, false],
        ["metadata.checksum_error", 1, false],
        ["metadata.parser_error", 32, false],
        ["metadata.priority", 3, false],
        ["_padding_0", 3, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "arp_t",
      "id" : 3,
      "fields" : [
        ["hwType", 16, false],
        ["protocalType", 16, false],
        ["hwAddrLenght", 8, false],
        ["protocolAddrLenght", 8, false],
        ["opCode", 16, false],
        ["srcMacAddr", 48, false],
        ["srcIpAddr", 32, false],
        ["dstMacAddr", 48, false],
        ["dstIpAddr", 32, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 4,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["diffserv", 8, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "cup_t",
      "id" : 5,
      "fields" : [
        ["srcSwitchId", 32, false],
        ["dstSwitchId", 32, false],
        ["opCode", 32, false],
        ["creditValue", 32, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "arp",
      "id" : 3,
      "header_type" : "arp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 4,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "cup",
      "id" : 5,
      "header_type" : "cup_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0806",
              "mask" : null,
              "next_state" : "parse_arp"
            },
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "hexstr",
              "value" : "0x0100",
              "mask" : null,
              "next_state" : "parse_cup"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "drop"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "drop",
          "id" : 1,
          "parser_ops" : [],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_arp",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "arp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_ipv4",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_cup",
          "id" : 4,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "cup"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "/p4c/credit.p4",
        "line" : 325,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["ethernet", "arp", "ipv4", "cup"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "MyIngress.debug",
      "id" : 0,
      "source_info" : {
        "filename" : "/p4c/credit.p4",
        "line" : 163,
        "column" : 26,
        "source_fragment" : "debug"
      },
      "size" : 10,
      "bitwidth" : 48
    },
    {
      "name" : "MyIngress.lastUpdatedTime",
      "id" : 1,
      "source_info" : {
        "filename" : "/p4c/credit.p4",
        "line" : 165,
        "column" : 32,
        "source_fragment" : "lastUpdatedTime"
      },
      "size" : 3,
      "bitwidth" : 48
    },
    {
      "name" : "MyIngress.hasTimeBanList",
      "id" : 2,
      "source_info" : {
        "filename" : "/p4c/credit.p4",
        "line" : 166,
        "column" : 31,
        "source_fragment" : "hasTimeBanList"
      },
      "size" : 3,
      "bitwidth" : 1
    },
    {
      "name" : "MyIngress.timeBanList",
      "id" : 3,
      "source_info" : {
        "filename" : "/p4c/credit.p4",
        "line" : 167,
        "column" : 32,
        "source_fragment" : "timeBanList"
      },
      "size" : 3,
      "bitwidth" : 48
    },
    {
      "name" : "switchId",
      "id" : 4,
      "source_info" : {
        "filename" : "/p4c/credit.p4",
        "line" : 95,
        "column" : 24,
        "source_fragment" : "switchId"
      },
      "size" : 1,
      "bitwidth" : 32
    },
    {
      "name" : "portSwitchMapping",
      "id" : 5,
      "source_info" : {
        "filename" : "/p4c/credit.p4",
        "line" : 96,
        "column" : 31,
        "source_fragment" : "portSwitchMapping"
      },
      "size" : 3,
      "bitwidth" : 32
    },
    {
      "name" : "ingressCreditCard",
      "id" : 6,
      "source_info" : {
        "filename" : "/p4c/credit.p4",
        "line" : 97,
        "column" : 28,
        "source_fragment" : "ingressCreditCard"
      },
      "size" : 3,
      "bitwidth" : 32
    },
    {
      "name" : "maxQueueLength",
      "id" : 7,
      "source_info" : {
        "filename" : "/p4c/credit.p4",
        "line" : 98,
        "column" : 21,
        "source_fragment" : "maxQueueLength"
      },
      "size" : 1,
      "bitwidth" : 19
    }
  ],
  "calculations" : [],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "MyIngress.drop",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 169,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 169,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 169,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 169,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.ipv4_forward",
      "id" : 6,
      "runtime_data" : [
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 177,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.debug"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_global_timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 178,
            "column" : 8,
            "source_fragment" : "debug.write(0,standard_metadata.ingress_global_timestamp)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.mac_forward",
      "id" : 7,
      "runtime_data" : [
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 195,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.reduce_credit",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "balence_0"]
            },
            {
              "type" : "register_array",
              "value" : "ingressCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 212,
            "column" : 8,
            "source_fragment" : "ingressCreditCard.read(balence, 1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "balence_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "balence_0"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 214,
            "column" : 8,
            "source_fragment" : "balence = balence - 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "ingressCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "field",
              "value" : ["scalars", "balence_0"]
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 215,
            "column" : 8,
            "source_fragment" : "ingressCreditCard.write(1, balence)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.reduce_credit",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "balence_0"]
            },
            {
              "type" : "register_array",
              "value" : "ingressCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 212,
            "column" : 8,
            "source_fragment" : "ingressCreditCard.read(balence, 1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "balence_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "balence_0"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 214,
            "column" : 8,
            "source_fragment" : "balence = balence - 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "ingressCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "field",
              "value" : ["scalars", "balence_0"]
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 215,
            "column" : 8,
            "source_fragment" : "ingressCreditCard.write(1, balence)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.add_credit",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "balence_1"]
            },
            {
              "type" : "register_array",
              "value" : "ingressCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 220,
            "column" : 8,
            "source_fragment" : "ingressCreditCard.read(balence, 1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "balence_1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "balence_1"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["cup", "creditValue"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 222,
            "column" : 8,
            "source_fragment" : "balence = balence + hdr.cup.creditValue"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "ingressCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "field",
              "value" : ["scalars", "balence_1"]
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 223,
            "column" : 8,
            "source_fragment" : "ingressCreditCard.write(1, balence)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.setTimeBan",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.hasTimeBanList"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 232,
            "column" : 8,
            "source_fragment" : "hasTimeBanList.write(1, 1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x0000000f4240"
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["cup", "creditValue"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 233,
            "column" : 29,
            "source_fragment" : "newTime"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.timeBanList"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 233,
            "column" : 8,
            "source_fragment" : "timeBanList.write(1, newTime)"
          }
        }
      ]
    },
    {
      "name" : "credit255",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "balence_2"]
            },
            {
              "type" : "register_array",
              "value" : "ingressCreditCard"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 255,
            "column" : 8,
            "source_fragment" : "ingressCreditCard.read(balence, 1)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "id_0"]
            },
            {
              "type" : "register_array",
              "value" : "switchId"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 257,
            "column" : 8,
            "source_fragment" : "switchId.read(id, 0)"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "/p4c/credit.p4",
        "line" : 160,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "tbl_drop",
          "id" : 0,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 252,
            "column" : 12,
            "source_fragment" : "drop()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [4],
          "actions" : ["MyIngress.drop"],
          "base_default_next" : "tbl_credit255",
          "next_tables" : {
            "MyIngress.drop" : "tbl_credit255"
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_credit255",
          "id" : 1,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 255,
            "column" : 8,
            "source_fragment" : "ingressCreditCard.read(balence, 1); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12],
          "actions" : ["credit255"],
          "base_default_next" : "node_5",
          "next_tables" : {
            "credit255" : "node_5"
          },
          "default_entry" : {
            "action_id" : 12,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_add_credit",
          "id" : 2,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 262,
            "column" : 20,
            "source_fragment" : "add_credit()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10],
          "actions" : ["MyIngress.add_credit"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.add_credit" : null
          },
          "default_entry" : {
            "action_id" : 10,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_setTimeBan",
          "id" : 3,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 264,
            "column" : 20,
            "source_fragment" : "setTimeBan(hdr.cup.creditValue)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11],
          "actions" : ["MyIngress.setTimeBan"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.setTimeBan" : null
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_drop_0",
          "id" : 4,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 266,
            "column" : 20,
            "source_fragment" : "drop()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5],
          "actions" : ["MyIngress.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.drop" : null
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.ipv4_lpm",
          "id" : 5,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 181,
            "column" : 10,
            "source_fragment" : "ipv4_lpm"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [6, 2, 0],
          "actions" : ["MyIngress.ipv4_forward", "MyIngress.drop", "NoAction"],
          "base_default_next" : "tbl_reduce_credit",
          "next_tables" : {
            "MyIngress.ipv4_forward" : "tbl_reduce_credit",
            "MyIngress.drop" : "tbl_reduce_credit",
            "NoAction" : "tbl_reduce_credit"
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_reduce_credit",
          "id" : 6,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 272,
            "column" : 20,
            "source_fragment" : "reduce_credit()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8],
          "actions" : ["MyIngress.reduce_credit"],
          "base_default_next" : "node_16",
          "next_tables" : {
            "MyIngress.reduce_credit" : "node_16"
          },
          "default_entry" : {
            "action_id" : 8,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.mac_exact",
          "id" : 7,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 198,
            "column" : 10,
            "source_fragment" : "mac_exact"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.arp.dstIpAddr",
              "target" : ["arp", "dstIpAddr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7, 3, 1],
          "actions" : ["MyIngress.mac_forward", "MyIngress.drop", "NoAction"],
          "base_default_next" : "tbl_reduce_credit_0",
          "next_tables" : {
            "MyIngress.mac_forward" : "tbl_reduce_credit_0",
            "MyIngress.drop" : "tbl_reduce_credit_0",
            "NoAction" : "tbl_reduce_credit_0"
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_reduce_credit_0",
          "id" : 8,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 276,
            "column" : 20,
            "source_fragment" : "reduce_credit()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9],
          "actions" : ["MyIngress.reduce_credit"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.reduce_credit" : null
          },
          "default_entry" : {
            "action_id" : 9,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 251,
            "column" : 12,
            "source_fragment" : "!hdr.ipv4.isValid() && !hdr.cup.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "not",
                  "left" : null,
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "not",
                  "left" : null,
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["cup", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          },
          "true_next" : "tbl_drop",
          "false_next" : "tbl_credit255"
        },
        {
          "name" : "node_5",
          "id" : 1,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 259,
            "column" : 12,
            "source_fragment" : "hdr.ipv4.isValid() && hdr.cup.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "$valid$"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["cup", "$valid$"]
                  }
                }
              }
            }
          },
          "true_next" : "node_6",
          "false_next" : "node_12"
        },
        {
          "name" : "node_6",
          "id" : 2,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 260,
            "column" : 16,
            "source_fragment" : "hdr.cup.dstSwitchId == id"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["cup", "dstSwitchId"]
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "id_0"]
              }
            }
          },
          "true_next" : "node_7",
          "false_next" : "tbl_drop_0"
        },
        {
          "name" : "node_7",
          "id" : 3,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 261,
            "column" : 20,
            "source_fragment" : "hdr.cup.opCode == 0x1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["cup", "opCode"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000001"
              }
            }
          },
          "true_next" : "tbl_add_credit",
          "false_next" : "node_9"
        },
        {
          "name" : "node_9",
          "id" : 4,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 263,
            "column" : 27,
            "source_fragment" : "hdr.cup.opCode == 0x2"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["cup", "opCode"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000002"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_setTimeBan"
        },
        {
          "name" : "node_12",
          "id" : 5,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 269,
            "column" : 35,
            "source_fragment" : "balence > 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : ">",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "balence_2"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000000"
              }
            }
          },
          "false_next" : null,
          "true_next" : "node_13"
        },
        {
          "name" : "node_13",
          "id" : 6,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 270,
            "column" : 20,
            "source_fragment" : "hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "true_next" : "MyIngress.ipv4_lpm",
          "false_next" : "node_16"
        },
        {
          "name" : "node_16",
          "id" : 7,
          "source_info" : {
            "filename" : "/p4c/credit.p4",
            "line" : 274,
            "column" : 20,
            "source_fragment" : "hdr.arp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["arp", "$valid$"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "MyIngress.mac_exact"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "/p4c/credit.p4",
        "line" : 289,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : null,
      "tables" : [],
      "action_profiles" : [],
      "conditionals" : []
    }
  ],
  "checksums" : [],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "/p4c/credit.bmv2/credit.p4i",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}