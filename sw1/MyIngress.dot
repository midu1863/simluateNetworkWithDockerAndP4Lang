digraph MyIngress {
subgraph cluster {
graph [
fontsize="22pt", label=MyIngress, style=bold];
0[label=__START__, margin="", shape=rectangle, style=solid];
1[label=__EXIT__, margin="", shape=rectangle, style=solid];
2[label="timeBanList_0/timeBanList...", margin="", shape=rectangle, style=solid];
3[label="standard_metadata.ingress_global_timestamp <= timeBan_0/timeBan;", margin="", shape=rectangle, style=rounded];
4[label="hasTimeBan_0/hasTimeBan =...", margin="", shape=rectangle, style=solid];
5[label="hasTimeBan_0/hasTimeBan =...", margin="", shape=rectangle, style=solid];
6[label="!hdr.ipv4.isValid() && !hdr.cup.isValid();", margin="", shape=rectangle, style=rounded];
7[label="drop_2/drop();", margin="", shape=rectangle, style=solid];
8[label="hdr.cup.isValid();", margin="", shape=rectangle, style=rounded];
9[label="switchId.read(ownId_0/own...", margin="", shape=rectangle, style=solid];
10[label="hdr.cup.dstSwitchId == ownId_0/ownId;", margin="", shape=rectangle, style=rounded];
11[label="hdr.cup.opCode == 1;", margin="", shape=rectangle, style=rounded];
12[label="ingressCreditCard.read(ba...\n...\ningressCreditCard.write(1...", margin="", shape=rectangle, style=solid];
13[label="hdr.cup.opCode == 2 && hasTimeBan_0/hasTimeBan == 0;", margin="", shape=rectangle, style=rounded];
14[label="setTimeBan();", margin="", shape=rectangle, style=solid];
15[label="drop_3/drop();", margin="", shape=rectangle, style=solid];
16[label="standard_metadata.egress_port == 0;", margin="", shape=rectangle, style=rounded];
17[label="ingressCreditCard.read(ba...\n...\nleftOverCreditCard.read(l...", margin="", shape=rectangle, style=solid];
18[label="dequeue_0/dequeue < 2 && leftOver_0/leftOver == 1;", margin="", shape=rectangle, style=rounded];
19[label="sendCredits();\n...\nleftOverCreditCard.write(...", margin="", shape=rectangle, style=solid];
20[label="hasTimeBan_0/hasTimeBan != 1 && balence_1/balence > 0;", margin="", shape=rectangle, style=rounded];
21[label="sendToGroupId();", margin="", shape=rectangle, style=solid];
22[label="standard_metadata.egress_...", margin="", shape=rectangle, style=solid];
23[label="newBalence_0/newBalence =...", margin="", shape=rectangle, style=solid];
24[label="newBalence_0/newBalence <= 10 && newBalence_0/newBalence >= 6;", margin="", shape=rectangle, style=rounded];
25[label="sendCredits_1/sendCredits...\n...\nsendToGroupId_1/sendToGro...", margin="", shape=rectangle, style=solid];
26[label="dequeue_0/dequeue == 9;", margin="", shape=rectangle, style=rounded];
27[label="timeout_0/timeout = 2;\n...\nsendToGroupId_2/sendToGro...", margin="", shape=rectangle, style=solid];
28[label="hasTimeBan_0/hasTimeBan != 1 && balence_1/balence > 0;", margin="", shape=rectangle, style=rounded];
29[label="sendToGroupId_3/sendToGro...", margin="", shape=rectangle, style=solid];
30[label="standard_metadata.egress_...", margin="", shape=rectangle, style=solid];
0 -> 2[label=""];
2 -> 3[label=""];
3 -> 4[label=TRUE];
3 -> 5[label=FALSE];
4 -> 6[label=""];
5 -> 6[label=""];
6 -> 7[label=TRUE];
6 -> 8[label=FALSE];
7 -> 8[label=""];
8 -> 9[label=TRUE];
8 -> 16[label=FALSE];
9 -> 10[label=""];
10 -> 11[label=TRUE];
10 -> 15[label=FALSE];
11 -> 12[label=TRUE];
11 -> 13[label=FALSE];
12 -> 1[label=""];
13 -> 14[label=TRUE];
13 -> 1[label=FALSE];
14 -> 1[label=""];
15 -> 1[label=""];
16 -> 17[label=TRUE];
16 -> 1[label=FALSE];
17 -> 18[label=""];
18 -> 19[label=TRUE];
18 -> 23[label=FALSE];
19 -> 20[label=""];
20 -> 21[label=TRUE];
20 -> 22[label=FALSE];
21 -> 1[label=""];
22 -> 1[label=""];
23 -> 24[label=""];
24 -> 25[label=TRUE];
24 -> 26[label=FALSE];
25 -> 1[label=""];
26 -> 27[label=TRUE];
26 -> 28[label=FALSE];
27 -> 1[label=""];
28 -> 29[label=TRUE];
28 -> 30[label=FALSE];
29 -> 1[label=""];
30 -> 1[label=""];
}
}
